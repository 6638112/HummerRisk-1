<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummerrisk.base.mapper.ext.ExtCloudEventMapper">

  <sql id="condition">
    <choose>
      <when test='${object}.operator == "like"'>
        like CONCAT('%', #{${object}.value},'%')
      </when>
      <when test='${object}.operator == "not like"'>
        not like CONCAT('%', #{${object}.value},'%')
      </when>
      <when test='${object}.operator == "in"'>
        in
        <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
          #{v}
        </foreach>
      </when>
      <when test='${object}.operator == "not in"'>
        not in
        <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
          #{v}
        </foreach>
      </when>
      <when test='${object}.operator == "between"'>
        between #{${object}.value[0]} and #{${object}.value[1]}
      </when>
      <when test='${object}.operator == "gt"'>
        &gt; #{${object}.value}
      </when>
      <when test='${object}.operator == "lt"'>
        &lt; #{${object}.value}
      </when>
      <when test='${object}.operator == "ge"'>
        &gt;= #{${object}.value}
      </when>
      <when test='${object}.operator == "le"'>
        &lt;= #{${object}.value}
      </when>
      <otherwise>
        = #{${object}.value}
      </otherwise>
    </choose>
  </sql>

  <sql id="combine">
    <if test='${condition}.accountId != null'>
      and t.cloud_account_id
      <include refid="condition">
        <property name="object" value="${condition}.accountId"/>
      </include>
    </if>
    <if test="${condition}.region != null">
      and (t.sync_region
      <include refid="condition">
        <property name="object" value="${condition}.region"/>
      </include>
          or
      t.region_name
      <include refid="condition">
        <property name="object" value="${condition}.region"/>
      </include>
          )
    </if>
    <if test="${condition}.eventRating != null">
      and t.event_rating
      <include refid="condition">
        <property name="object" value="${condition}.eventRating"/>
      </include>
    </if>
    <if test="${condition}.eventTime != null">
      and t.event_time
      <include refid="condition">
        <property name="object" value="${condition}.eventTime"/>
      </include>
    </if>
    <if test="${condition}.userName != null">
      and t.user_name
      <include refid="condition">
        <property name="object" value="${condition}.userName"/>
      </include>
    </if>
    <if test="${condition}.eventName != null">
      and t.event_name
      <include refid="condition">
        <property name="object" value="${condition}.eventName"/>
      </include>
    </if>
    <if test="${condition}.resourceType != null">
      and t.resource_type
      <include refid="condition">
        <property name="object" value="${condition}.resourceType"/>
      </include>
    </if>
    <if test='${condition}.resourceName != null'>
      and t.resource_name
      <include refid="condition">
        <property name="object" value="${condition}.resourceName"/>
      </include>
    </if>
  </sql>

  <select id="getCloudEventList" resultType="com.hummerrisk.base.domain.CloudEvent">
    select
        t.*
    from cloud_event t
    <where>
      <if test="request.combine != null">
        <include refid="combine">
          <property name="condition" value="request.combine"/>
          <property name="name" value="request.name"/>
        </include>
      </if>
      <if test="request.name != null and request.name != ''">
        and t.event_name like CONCAT('%', #{request.name},'%')
      </if>
    </where>
    order by event_time desc

  </select>

  <insert id="batchCloudEvents">
    insert into cloud_event
    (event_id, cloud_account_id, sync_region,
    acs_region, event_name, event_type,
    event_category, event_version, event_rw,
    event_message, event_source, event_time,
    source_ip_address, user_agent, user_identity,
    service_name, additional_event_data, request_id,
    request_parameters, resource_type, resource_name,
    referenced_resources, api_version, response_elements,
    user_name, event_rating, resource_id,
    location_info, endpoint, resource_url,region_name
    ) values
    <foreach item="item" index="index" collection="list" separator=",">
      (
      #{item.eventId,jdbcType=VARCHAR}, #{item.cloudAccountId,jdbcType=VARCHAR}, #{item.syncRegion,jdbcType=VARCHAR},
      #{item.acsRegion,jdbcType=VARCHAR}, #{item.eventName,jdbcType=VARCHAR}, #{item.eventType,jdbcType=VARCHAR},
      #{item.eventCategory,jdbcType=VARCHAR}, #{item.eventVersion,jdbcType=VARCHAR}, #{item.eventRw,jdbcType=VARCHAR},
      #{item.eventMessage,jdbcType=VARCHAR}, #{item.eventSource,jdbcType=VARCHAR}, #{item.eventTime,jdbcType=BIGINT},
      #{item.sourceIpAddress,jdbcType=VARCHAR}, #{item.userAgent,jdbcType=VARCHAR}, #{item.userIdentity,jdbcType=VARCHAR},
      #{item.serviceName,jdbcType=VARCHAR}, #{item.additionalEventData,jdbcType=VARCHAR}, #{item.requestId,jdbcType=VARCHAR},
      #{item.requestParameters,jdbcType=VARCHAR}, #{item.resourceType,jdbcType=VARCHAR}, #{item.resourceName,jdbcType=VARCHAR},
      #{item.referencedResources,jdbcType=VARCHAR}, #{item.apiVersion,jdbcType=VARCHAR}, #{item.responseElements,jdbcType=VARCHAR},
      #{item.userName,jdbcType=VARCHAR}, #{item.eventRating,jdbcType=INTEGER}, #{item.resourceId,jdbcType=VARCHAR},
      #{item.locationInfo,jdbcType=VARCHAR}, #{item.endpoint,jdbcType=VARCHAR}, #{item.resourceUrl,jdbcType=VARCHAR}, #{item.regionName,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>


</mapper>
