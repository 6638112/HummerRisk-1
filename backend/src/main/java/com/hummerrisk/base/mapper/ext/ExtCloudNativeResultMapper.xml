<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummerrisk.base.mapper.ext.ExtCloudNativeResultMapper">

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.updateTime != null">
            and t.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            and t.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and u.id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
    </sql>

    <select id="resultList" parameterType="com.hummerrisk.controller.request.k8s.K8sResultRequest" resultType="com.hummerrisk.dto.CloudNativeResultDTO">
        SELECT
        t.*,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM cloud_native_result t
        left join user u on t.apply_user = u.id
        <where>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="name != null">
                AND LOWER(t.name) like CONCAT('%',#{name},'%')
            </if>
            <if test="combine != null">
                <include refid="combine">
                    <property name="condition" value="combine"/>
                </include>
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <select id="syncList" parameterType="com.hummerrisk.controller.request.cloudNative.CloudNativeSyncLogRequest" resultType="com.hummerrisk.base.domain.CloudNativeSourceSyncLog">
        SELECT
        t.*
        FROM cloud_native_source_sync_log t
        <where>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="name != null">
                AND LOWER(t.name) like CONCAT('%',#{name},'%')
            </if>
            <if test="combine != null">
                <include refid="combine">
                    <property name="condition" value="combine"/>
                </include>
            </if>
        </where>
        ORDER BY t.create_time desc
    </select>

    <resultMap id="ImageMap" type="com.hummerrisk.dto.ImageDTO"
               extends="com.hummerrisk.base.mapper.ImageMapper.BaseResultMap">
        <result column="user" property="user"/>
        <result column="imageRepoName" property="imageRepoName"/>
    </resultMap>

    <select id="imageList" resultMap="ImageMap">
        select
        t.*,
        r.name as imageRepoName,
        u.name as userName
        from image as t
        left join image_repo r on t.repo_id = r.id
        left join user u on t.creator = u.id
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.id != null and request.id != ''">
                and t.id = #{request.id}
            </if>
            <if test="request.name != null and request.name != ''">
                and t.name like CONCAT('%', #{request.name},'%')
            </if>
            <if test="request.status != null and request.status != ''">
                and t.status = #{request.status}
            </if>
        </where>
        order by t.update_time desc
    </select>

    <select id="metricChart" resultType="com.hummerrisk.dto.MetricChartDTO" parameterType="java.lang.String">
        SELECT *
        from (
                 (SELECT count(*) as critical FROM cloud_native_result_item t WHERE LOWER(t.severity) = 'critical' AND t.result_id = #{resultId}) as critical,
                 (SELECT count(*) as high FROM cloud_native_result_item t WHERE LOWER(t.severity) = 'high' AND t.result_id = #{resultId}) as high,
                 (SELECT count(*) as medium FROM cloud_native_result_item t WHERE LOWER(t.severity) = 'medium' AND t.result_id = #{resultId}) as medium,
                 (SELECT count(*) as low FROM cloud_native_result_item t WHERE LOWER(t.severity) = 'low' AND t.result_id = #{resultId}) as low,
                 (SELECT count(*) as unknown FROM cloud_native_result_item t WHERE LOWER(t.severity) = 'unknown' AND t.result_id = #{resultId}) as unknown,
                 (SELECT count(*) as total FROM cloud_native_result_item t WHERE t.result_id = #{resultId}) as total
         )
    </select>

    <select id="history" parameterType="java.util.Map" resultType="com.hummerrisk.dto.HistoryCloudNativeResultDTO">
        SELECT
        t.*,
        (select count(*) from history_cloud_native_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from history_cloud_native_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from history_cloud_native_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from history_cloud_native_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from history_cloud_native_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM history_cloud_native_result t

        <where>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="cloudNativeId != null">
                AND t.cloud_native_id = #{cloudNativeId}
            </if>
            <if test="name != null">
                AND LOWER(t.name) like CONCAT('%',#{name},'%')
            </if>
        </where>
        ORDER BY t.update_time desc
    </select>

    <select id="getCloudNativeResult" parameterType="java.lang.String" resultType="com.hummerrisk.dto.CloudNativeResultDTO">
        SELECT
        t.*,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and severity = 'CRITICAL') as critical,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and severity = 'HIGH') as high,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and severity = 'MEDIUM') as medium,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and severity = 'LOW') as low,
        (select count(*) from cloud_native_result_item tj where tj.result_id = t.id and severity = 'UNKNOWN') as unknown
        FROM cloud_native_result t
        <where>
            <if test="resultId != null">
                AND t.id = #{resultId}
            </if>
        </where>
    </select>

</mapper>
