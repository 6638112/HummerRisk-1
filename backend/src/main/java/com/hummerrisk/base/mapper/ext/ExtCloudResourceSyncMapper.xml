<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummerrisk.base.mapper.ext.ExtCloudResourceSyncMapper">
    <resultMap id="BaseResultMap" type="com.hummerrisk.base.domain.CloudResourceSync">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="account_id" jdbcType="VARCHAR" property="accountId" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="resource_types" jdbcType="VARCHAR" property="resourceTypes" />
        <result column="resources_sum" jdbcType="BIGINT" property="resourcesSum" />
    </resultMap>

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.pluginId != null'>
            and t.plugin_id
            <include refid="condition">
                <property name="object" value="${condition}.pluginId"/>
            </include>
        </if>
        <if test='${condition}.accountId != null'>
            and t.account_id
            <include refid="condition">
                <property name="object" value="${condition}.accountId"/>
            </include>
        </if>
        <if test='${condition}.pluginName != null'>
            and t.plugin_name
            <include refid="condition">
                <property name="object" value="${condition}.pluginName"/>
            </include>
        </if>

        <if test='${condition}.resourceTypes != null'>
            and t.resource_types
            <include refid="condition">
                <property name="object" value="${condition}.resourceTypes"/>
            </include>
        </if>
    </sql>

    <select id="selectByRequest" resultMap="BaseResultMap">
        select id, `status`, apply_user, create_time, account_id, plugin_id, plugin_name, plugin_icon,
               resource_types, resources_sum
        from cloud_resource_sync t
        where 1=1
        <if test="request.combine != null">
            <include refid="combine">
                <property name="condition" value="request.combine"/>
                <property name="name" value="request.name"/>
            </include>
        </if>
        <if test="request.name != null and request.name != ''">
            and t.resource_types like CONCAT('%', #{request.name},'%')
        </if>
        order by create_time desc
    </select>


    <resultMap id="D3BaseResultMap" type="com.hummerrisk.controller.request.sync.D3">
        <result column="name" jdbcType="VARCHAR" property="name" />
        <collection property="children" ofType="com.hummerrisk.controller.request.sync.Cloud" javaType="list" select="selectCloudAccount" column="name">
            <result column="name" jdbcType="VARCHAR" property="name" />
            <result column="accountId" jdbcType="VARCHAR" property="accountId" />
            <collection property="children" ofType="com.hummerrisk.controller.request.sync.Region" javaType="list" select="selectRegion" column="accountId">
                <result column="name" jdbcType="VARCHAR" property="name" />
                <result column="regionId" jdbcType="VARCHAR" property="regionId" />
                <collection property="children" ofType="com.hummerrisk.controller.request.sync.ResourceType" javaType="list" select="selectResourceType" column="regionId">
                    <result column="name" jdbcType="VARCHAR" property="name" />
                    <result column="resourceType" jdbcType="VARCHAR" property="resourceType" />
                    <collection property="children" ofType="com.hummerrisk.controller.request.sync.Resource" javaType="list" select="selectResource" column="resourceType">
                        <result column="name" jdbcType="VARCHAR" property="name" />
                        <result column="value" jdbcType="VARCHAR" property="value" />
                    </collection>
                </collection>
            </collection>
        </collection>
    </resultMap>

    <select id="d3" resultMap="D3BaseResultMap">
        select 'Cloud' as name
    </select>

    <select id="selectCloudAccount" resultType="com.hummerrisk.controller.request.sync.Cloud">
        select
        t1.name as name,
        t1.id as accountId
        from cloud_resource_item t
        join cloud_account t1 on t.account_id = t1.id
        group by t.account_id
    </select>

    <select id="selectRegion" resultType="com.hummerrisk.controller.request.sync.Region" parameterType="java.lang.String">
        select
        t.region_name as name,
        t.region_id as regionId
        from cloud_resource_item t
        where t.account_id = #{accountId}
        group by t.region_id, t.region_name
    </select>

    <select id="selectResourceType" resultType="com.hummerrisk.controller.request.sync.ResourceType" parameterType="java.lang.String">
        select
        t.resource_type as name,
        t.resource_type as resourceType
        from cloud_resource_item t
        where t.region_id = #{regionId}
        group by t.resource_type
    </select>

    <select id="selectResource" resultType="com.hummerrisk.controller.request.sync.Resource" parameterType="java.lang.String">
        select
        t.hummer_id as name,
        t.resource_type as value
        from cloud_resource_item t
        where t.resource_type = #{resourceType}
    </select>
</mapper>
