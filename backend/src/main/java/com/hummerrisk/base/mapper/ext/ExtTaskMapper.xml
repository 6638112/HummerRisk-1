<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hummerrisk.base.mapper.ext.ExtTaskMapper">

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.taskName != null'>
            and t.task_name
            <include refid="condition">
                <property name="object" value="${condition}.taskName"/>
            </include>
        </if>
        <if test='${condition}.severity != null'>
            and t.severity
            <include refid="condition">
                <property name="object" value="${condition}.severity"/>
            </include>
        </if>
    </sql>

    <resultMap id="AccountBaseResultMap" type="com.hummerrisk.controller.request.task.AccountVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_id" jdbcType="VARCHAR" property="pluginId" />
        <result column="plugin_name" jdbcType="VARCHAR" property="pluginName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="proxy_id" jdbcType="INTEGER" property="proxyId" />
        <result column="favour" jdbcType="BOOLEAN" property="favour" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectAccountByExample" parameterType="com.hummerrisk.base.domain.AccountExample" resultMap="AccountBaseResultMap">
        select t.*, (f.id is null) as favour, 'cloudAccount' as type
        from cloud_account t
        left join favorite f on t.id = f.source_id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectVulnByExample" parameterType="com.hummerrisk.base.domain.AccountExample" resultMap="AccountBaseResultMap">
        select t.*, (f.id is null) as favour, 'vulnAccount' as type
        from cloud_account t
        left join favorite f on t.id = f.source_id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="ServerBaseResultMap" type="com.hummerrisk.controller.request.task.ServerVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="server_group_id" jdbcType="VARCHAR" property="serverGroupId" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="ip" jdbcType="VARCHAR" property="ip" />
        <result column="port" jdbcType="VARCHAR" property="port" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="is_proxy" jdbcType="BIT" property="isProxy" />
        <result column="proxy_id" jdbcType="INTEGER" property="proxyId" />
        <result column="favour" jdbcType="BOOLEAN" property="favour" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectServerByExample" parameterType="com.hummerrisk.base.domain.ServerExample" resultMap="ServerBaseResultMap">
        select t.*, (f.id is null) as favour, 'serverAccount' as type
        from server t
        left join favorite f on t.id = f.source_id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="ImageBaseResultMap" type="com.hummerrisk.controller.request.task.ImageVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
        <result column="image_tag" jdbcType="VARCHAR" property="imageTag" />
        <result column="path" jdbcType="VARCHAR" property="path" />
        <result column="favour" jdbcType="BOOLEAN" property="favour" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectImageByExample" parameterType="com.hummerrisk.base.domain.ImageExample" resultMap="ImageBaseResultMap">
        select t.id, t.name, t.plugin_icon, t.status, t.image_url, t.image_tag, t.path, t.create_time, (f.id is null) as favour, 'imageAccount' as type
        from image t
        left join favorite f on t.id = f.source_id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <resultMap id="PackageBaseResultMap" type="com.hummerrisk.controller.request.task.PackageVo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="package_name" jdbcType="VARCHAR" property="packageName" />
        <result column="plugin_icon" jdbcType="VARCHAR" property="pluginIcon" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="size" jdbcType="VARCHAR" property="size" />
        <result column="path" jdbcType="VARCHAR" property="path" />
        <result column="is_proxy" jdbcType="BIT" property="isProxy" />
        <result column="proxy_id" jdbcType="INTEGER" property="proxyId" />
        <result column="favour" jdbcType="BOOLEAN" property="favour" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="selectPackageByExample" parameterType="com.hummerrisk.base.domain.PackageExample" resultMap="PackageBaseResultMap">
        select t.*, (f.id is null) as favour, 'packageAccount' as type
        from package t
        left join favorite f on t.id = f.source_id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="cloudRuleList" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.controller.request.task.RuleVo">
        select
            t.id as sourceId,
            'rule' as ruleType,
            t.name as ruleName,
            t.description as ruleDesc,
            t.plugin_icon as icon,
            t.severity,
            t1.id as accountId,
            t1.name as accountName,
            'cloudAccount' as accountType
        from rule t
        left join cloud_account t1 on t.plugin_id = t1.plugin_id
        <where>
            <if test="accountId != null">
                AND t1.id = #{accountId}
            </if>
            <if test="ruleName != null">
                AND t.name like CONCAT('%', #{ruleName},'%')
            </if>
            and t.plugin_id not in ('hummer-nuclei-plugin', 'hummer-xray-plugin', 'hummer-tsunami-plugin')
        </where>
        order by t.last_modified desc
    </select>

    <select id="vulnRuleList" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.controller.request.task.RuleVo">
        select
        t.id as sourceId,
        'rule' as ruleType,
        t.name as ruleName,
        t.description as ruleDesc,
        t.plugin_icon as icon,
        t.severity,
        t1.id as accountId,
        t1.name as accountName,
        'vulnAccount' as accountType
        from rule t
        left join cloud_account t1 on t.plugin_id = t1.plugin_id
        <where>
            <if test="accountId != null">
                AND t1.id = #{accountId}
            </if>
            <if test="ruleName != null">
                AND t.name like CONCAT('%', #{ruleName},'%')
            </if>
            and t.plugin_id in ('hummer-nuclei-plugin', 'hummer-xray-plugin', 'hummer-tsunami-plugin')
        </where>
        order by t.last_modified desc
    </select>

    <select id="serverRuleList" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.controller.request.task.RuleVo">
        select
        t.id as sourceId,
        'rule' as ruleType,
        t.name as ruleName,
        t.description as ruleDesc,
        'server.png' as icon,
        t.severity,
        (select id from server where id = #{accountId}) as accountId,
        (select name from server where id = #{accountId}) as accountName,
        'serverAccount' as accountType
        from server_rule t
        <where>
            <if test="ruleName != null">
                AND t.name like CONCAT('%', #{ruleName},'%')
            </if>
        </where>
        order by t.last_modified desc
    </select>

    <select id="imageRuleList" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.controller.request.task.RuleVo">
        select
        t.id as sourceId,
        'rule' as ruleType,
        t.name as ruleName,
        t.description as ruleDesc,
        'docker.png' as icon,
        t.severity,
        (select id from image where id = #{accountId}) as accountId,
        (select name from image where id = #{accountId}) as accountName,
        'imageAccount' as accountType
        from image_rule t
        <where>
            <if test="ruleName != null">
                AND t.name like CONCAT('%', #{ruleName},'%')
            </if>
        </where>
        order by t.last_modified desc
    </select>

    <select id="packageRuleList" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.controller.request.task.RuleVo">
        select
        t.id as sourceId,
        'rule' as ruleType,
        t.name as ruleName,
        t.description as ruleDesc,
        'package.png' as icon,
        t.severity,
        (select id from package where id = #{accountId}) as accountId,
        (select name from package where id = #{accountId}) as accountName,
        'packageAccount' as accountType
        from package_rule t
        <where>
            <if test="ruleName != null">
                AND t.name like CONCAT('%', #{ruleName},'%')
            </if>
        </where>
        order by t.last_modified desc
    </select>

    <select id="ruleTagList" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.controller.request.task.RuleVo">
        select
        t.tag_key as sourceId,
        'tag' as ruleType,
        t.tag_name as ruleName,
        t.tag_name as ruleDesc,
        <if test="accountType != null">
            (
            <if test="accountType != null and accountType == 'cloudAccount'">
                select id from cloud_account where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'vulnAccount'">
                select id from cloud_account where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'serverAccount'">
                select id from server where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'imageAccount'">
                select id from image where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'packageAccount'">
                select id from package where id = #{accountId}
            </if>
            ) as accountId,
        </if>
        <if test="accountType != null">
            (
            <if test="accountType != null and accountType == 'cloudAccount'">
                select name from cloud_account where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'vulnAccount'">
                select name from cloud_account where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'serverAccount'">
                select name from server where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'imageAccount'">
                select name from image where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'packageAccount'">
                select name from package where id = #{accountId}
            </if>
            ) as accountName,
        </if>
        <if test="accountType != null">
            (
            <if test="accountType != null and accountType == 'cloudAccount'">
                'cloudAccount'
            </if>
            <if test="accountType != null and accountType == 'vulnAccount'">
                'vulnAccount'
            </if>
            <if test="accountType != null and accountType == 'serverAccount'">
                'serverAccount'
            </if>
            <if test="accountType != null and accountType == 'imageAccount'">
                'imageAccount'
            </if>
            <if test="accountType != null and accountType == 'packageAccount'">
                'packageAccount'
            </if>
        ) as accountType,
        </if>
        'tag.png' as icon,
        'HighRisk' as severity
        from rule_tag t
        <where>
            <if test="ruleName != null">
                AND t.tag_name like CONCAT('%', #{ruleName},'%')
            </if>
        </where>
    </select>

    <select id="ruleGroupList" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.controller.request.task.RuleVo">
        select
        t.id as sourceId,
        'group' as ruleType,
        t.name as ruleName,
        t.description as ruleDesc,
        <if test="accountType != null">
            (
            <if test="accountType != null and accountType == 'cloudAccount'">
                select id from cloud_account where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'vulnAccount'">
                select id from cloud_account where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'serverAccount'">
                select id from server where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'imageAccount'">
                select id from image where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'packageAccount'">
                select id from package where id = #{accountId}
            </if>
            ) as accountId,
        </if>
        <if test="accountType != null">
            (
            <if test="accountType != null and accountType == 'cloudAccount'">
                select name from cloud_account where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'vulnAccount'">
                select name from cloud_account where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'serverAccount'">
                select name from server where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'imageAccount'">
                select name from image where id = #{accountId}
            </if>
            <if test="accountType != null and accountType == 'packageAccount'">
                select name from package where id = #{accountId}
            </if>
            ) as accountName,
        </if>
        <if test="accountType != null">
            (
            <if test="accountType != null and accountType == 'cloudAccount'">
                'cloudAccount'
            </if>
            <if test="accountType != null and accountType == 'vulnAccount'">
                'vulnAccount'
            </if>
            <if test="accountType != null and accountType == 'serverAccount'">
                'serverAccount'
            </if>
            <if test="accountType != null and accountType == 'imageAccount'">
                'imageAccount'
            </if>
            <if test="accountType != null and accountType == 'packageAccount'">
                'packageAccount'
            </if>
            ) as accountType,
        </if>
        'group.png' as icon,
        'HighRisk' as severity
        from rule_group t
        left join cloud_account t1 on t.plugin_id = t1.plugin_id
        <where>
            <if test="ruleName != null">
                AND t.name like CONCAT('%', #{ruleName},'%')
            </if>
            <if test="accountId != null">
                AND t1.id = #{accountId}
            </if>
        </where>
    </select>

    <resultMap id="CloudDetailRule" type="com.hummerrisk.dto.RuleDTO"
               extends="com.hummerrisk.base.mapper.RuleMapper.BaseResultMap">
        <result column="isSaveParam" property="isSaveParam" jdbcType="BOOLEAN"/>
        <result column="tagKey" property="tagKey" jdbcType="VARCHAR"/>
        <result column="tagName" property="tagName" jdbcType="VARCHAR"/>
        <collection property="tags" javaType="list" ofType="string" select="getTags" column="id">
            <result column="tagKey" jdbcType="VARCHAR" property="tagKey"/>
        </collection>
    </resultMap>

    <select id="getTags" resultType="java.lang.String" parameterType="java.lang.String">
        SELECT t.tag_key as tagKey
        FROM rule_tag t
        WHERE tag_key IN
              (SELECT tag_key FROM rule_tag_mapping WHERE rule_id = #{id})
    </select>

    <select id="cloudDetailRule" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultMap="CloudDetailRule">
        SELECT
        t.*,
        (select tag_key from rule_tag_mapping where rule_id = t.id limit 1) as tagKey,
        (select tag_name from rule_tag_mapping m left join rule_tag g on m.tag_key = g.tag_key where rule_id = t.id limit 1) as tagName
        FROM rule t
        <where>
            <if test="sourceId != null">
                AND t.id = #{sourceId}
            </if>
            and t.plugin_id not in ('hummer-nuclei-plugin', 'hummer-xray-plugin', 'hummer-tsunami-plugin')
        </where>
        ORDER BY t.last_modified desc
    </select>

    <select id="vulnDetailRule" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultMap="CloudDetailRule">
        SELECT
        t.*,
        (select tag_key from rule_tag_mapping where rule_id = t.id limit 1) as tagKey,
        (select tag_name from rule_tag_mapping m left join rule_tag g on m.tag_key = g.tag_key where rule_id = t.id limit 1) as tagName
        FROM rule t
        <where>
            <if test="sourceId != null">
                AND t.id = #{sourceId}
            </if>
            and t.plugin_id in ('hummer-nuclei-plugin', 'hummer-xray-plugin', 'hummer-tsunami-plugin')
        </where>
        ORDER BY t.last_modified desc
    </select>

    <select id="serverDetailRule" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.dto.ServerRuleDTO">
        SELECT
        t.*,
        'server.png' as pluginIcon,
        t1.tag_key as tagKey,
        t2.tag_name as tagName
        FROM server_rule t
        left join rule_tag_mapping t1 on t1.rule_id = t.id
        left join rule_tag t2 on t1.tag_key = t2.tag_key
        <where>
            <if test="sourceId != null">
                AND t.id = #{sourceId}
            </if>
        </where>
        ORDER BY t.last_modified desc
    </select>

    <select id="imageDetailRule" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.dto.ImageRuleDTO">
        SELECT
        t.*,
        'docker.png' as pluginIcon,
        t1.tag_key as tagKey,
        t2.tag_name as tagName
        FROM image_rule t
        left join rule_tag_mapping t1 on t1.rule_id = t.id
        left join rule_tag t2 on t1.tag_key = t2.tag_key

        <where>
            <if test="sourceId != null">
                AND t.id = #{sourceId}
            </if>
        </where>
        ORDER BY t.last_modified desc
    </select>

    <select id="packageDetailRule" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.dto.PackageRuleDTO">
        SELECT
        t.*,
        'package.png' as pluginIcon,
        t1.tag_key as tagKey,
        t2.tag_name as tagName
        FROM package_rule t
        left join rule_tag_mapping t1 on t1.rule_id = t.id
        left join rule_tag t2 on t1.tag_key = t2.tag_key

        <where>
            <if test="sourceId != null">
                AND t.id = #{sourceId}
            </if>
        </where>
        ORDER BY t.last_modified desc
    </select>

    <select id="detailTag" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.dto.TaskTagGroupDTO">
        SELECT
            DISTINCT
            t2.id,
            t2.name,
            t2.status,
            t2.severity,
            t2.description,
            t2.parameter,
            t2.last_modified as lastModified,
            t2.flag,
            t2.script
        FROM rule_tag t
        left join rule_tag_mapping t1 on t.tag_key = t1.tag_key
        join rule t2 on t1.rule_id = t2.id
        join cloud_account t3 on t2.plugin_id = t3.plugin_id

        <where>
            <if test="sourceId != null">
                AND t.tag_key = #{sourceId}
            </if>
            <if test="accountId != null">
                AND t3.id = #{accountId}
            </if>
        </where>

        UNION ALL

        SELECT
            DISTINCT
            t2.id,
            t2.name,
            t2.status,
            t2.severity,
            t2.description,
            t2.parameter,
            t2.last_modified as lastModified,
            t2.flag,
            t2.script
        FROM rule_tag t
        left join rule_tag_mapping t1 on t.tag_key = t1.tag_key
        join server_rule t2 on t1.rule_id = t2.id

        <where>
            <if test="sourceId != null">
                AND t.tag_key = #{sourceId}
            </if>
            <if test="accountType != null and accountType != 'serverAccount'">
                AND t.tag_key = 'serverAccount'
            </if>
        </where>

        UNION ALL

        SELECT
            DISTINCT
            t2.id,
            t2.name,
            t2.status,
            t2.severity,
            t2.description,
            t2.parameter,
            t2.last_modified as lastModified,
            t2.flag,
            t2.script
        FROM rule_tag t
        left join rule_tag_mapping t1 on t.tag_key = t1.tag_key
        join image_rule t2 on t1.rule_id = t2.id

        <where>
            <if test="sourceId != null">
                AND t.tag_key = #{sourceId}
            </if>
            <if test="accountType != null and accountType != 'imageAccount'">
                AND t.tag_key = 'imageAccount'
            </if>
        </where>

        UNION ALL

        SELECT
            DISTINCT
            t2.id,
            t2.name,
            t2.status,
            t2.severity,
            t2.description,
            t2.parameter,
            t2.last_modified as lastModified,
            t2.flag,
            t2.script
        FROM rule_tag t
        left join rule_tag_mapping t1 on t.tag_key = t1.tag_key
        join package_rule t2 on t1.rule_id = t2.id

        <where>
            <if test="sourceId != null">
                AND t.tag_key = #{sourceId}
            </if>
            <if test="accountType != null and accountType != 'packageAccount'">
                AND t.tag_key = 'packageAccount'
            </if>
        </where>

    </select>

    <select id="detailGroup" parameterType="com.hummerrisk.controller.request.task.RuleVo" resultType="com.hummerrisk.dto.TaskTagGroupDTO">
        SELECT
            DISTINCT
            t2.id,
            t2.name,
            t2.status,
            t2.severity,
            t2.description,
            t2.parameter,
            t2.last_modified as lastModified,
            t2.flag,
            t2.script
        FROM rule_group t
        left join rule_group_mapping t1 on t.id = t1.group_id
        join rule t2 on t1.rule_id = t2.id

        <where>
            <if test="sourceId != null">
                AND t.id = #{sourceId}
            </if>
        </where>

        UNION ALL

        SELECT
            DISTINCT
            t2.id,
            t2.name,
            t2.status,
            t2.severity,
            t2.description,
            t2.parameter,
            t2.last_modified as lastModified,
            t2.flag,
            t2.script
        FROM rule_group t
        left join rule_group_mapping t1 on t.id = t1.group_id
        join server_rule t2 on t1.rule_id = t2.id

        <where>
            <if test="sourceId != null">
                AND t.id = #{sourceId}
            </if>
        </where>

        UNION ALL

        SELECT
            DISTINCT
            t2.id,
            t2.name,
            t2.status,
            t2.severity,
            t2.description,
            t2.parameter,
            t2.last_modified as lastModified,
            t2.flag,
            t2.script
        FROM rule_group t
        left join rule_group_mapping t1 on t.id = t1.group_id
        join image_rule t2 on t1.rule_id = t2.id

        <where>
            <if test="sourceId != null">
                AND t.id = #{sourceId}
            </if>
        </where>

        UNION ALL

        SELECT
            DISTINCT
            t2.id,
            t2.name,
            t2.status,
            t2.severity,
            t2.description,
            t2.parameter,
            t2.last_modified as lastModified,
            t2.flag,
            t2.script
        FROM rule_group t
        left join rule_group_mapping t1 on t.id = t1.group_id
        join package_rule t2 on t1.rule_id = t2.id

        <where>
            <if test="sourceId != null">
                AND t.id = #{sourceId}
            </if>
        </where>

    </select>

    <select id="taskList" parameterType="com.hummerrisk.controller.request.task.TaskRequest"
            resultType="com.hummerrisk.controller.request.task.TaskVo">
        SELECT
        t.*,
        t1.name as userName
        FROM task t
        left join user t1 on t1.id = t.apply_user

        <where>
            <if test="id != null">
                AND t.id = #{id}
            </if>
            <if test="taskName != null">
                AND t.task_name like CONCAT('%',#{taskName},'%')
            </if>
            <if test="combine != null">
                <include refid="combine">
                    <property name="condition" value="combine"/>
                </include>
            </if>
        </where>
        ORDER BY t.create_time desc
    </select>

    <resultMap id="TaskItemLogResultMap" type="com.hummerrisk.controller.request.task.TaskLogVo"
               extends="com.hummerrisk.base.mapper.TaskItemResourceMapper.BaseResultMap">
        <association property="taskResourceVo" column="resource_id" select="getTaskResourceVo">
            <result column="id" jdbcType="VARCHAR" property="id"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="desc" jdbcType="VARCHAR" property="desc"/>
            <result column="status" jdbcType="VARCHAR" property="status"/>
            <result column="severity" jdbcType="VARCHAR" property="severity"/>
            <result column="icon" jdbcType="VARCHAR" property="icon"/>
        </association>
        <collection property="taskItemResourceLogList" ofType="com.hummerrisk.base.domain.TaskItemResourceLog" javaType="list" select="getTaskItemResourceLogList" column="id">
            <id column="id" jdbcType="INTEGER" property="id" />
            <result column="task_item_id" jdbcType="VARCHAR" property="taskItemId" />
            <result column="task_item_resource_id" jdbcType="VARCHAR" property="taskItemResourceId" />
            <result column="resource_id" jdbcType="VARCHAR" property="resourceId" />
            <result column="create_time" jdbcType="BIGINT" property="createTime" />
            <result column="operator" jdbcType="VARCHAR" property="operator" />
            <result column="operation" jdbcType="VARCHAR" property="operation" />
            <result column="result" jdbcType="BIT" property="result" />
        </collection>
    </resultMap>

    <select id="getTaskResourceVo" resultType="com.hummerrisk.controller.request.task.TaskResourceVo" parameterType="java.lang.String">
        SELECT t.id,
               concat(t.task_name, ' ', t.resource_types, ' | ', t.rule_tags)  as name,
               t.description as 'desc',
               t.status,
               t.severity,
               t.plugin_icon as icon
        FROM history_cloud_task t
        WHERE t.id = #{resource_id}

        UNION ALL

        SELECT t.id,
               concat(t.task_name, ' ', t.resource_types) as name,
               t.description as 'desc',
               t.status,
               t.severity,
               t.plugin_icon as icon
        FROM history_vuln_task t
        WHERE t.id = #{resource_id}

        UNION ALL

        SELECT t.id,
               concat(t.server_name, ' ', t.ip, ':', t.port) as name,
               t.rule_desc as 'desc',
               t.result_status as status,
               t.severity,
               t.plugin_icon as icon
        FROM history_server_task t
        WHERE t.id = #{resource_id}

        UNION ALL

        SELECT t.id,
               concat(t.rule_name, ' | ' , t.name) as name,
               t.rule_desc as 'desc',
               t.result_status as status,
               t.severity,
               'docker.png' as icon
        FROM history_image_task t
        WHERE t.id = #{resource_id}

        UNION ALL

        SELECT t.id,
               concat(t.name, ' | ', t.package_name) as name,
               t.rule_desc as 'desc',
               t.result_status as status,
               t.severity,
               'package.png' as icon
        FROM history_package_task t
        WHERE t.id = #{resource_id}
    </select>

    <select id="getTaskItemResourceLogList" resultType="com.hummerrisk.base.domain.TaskItemResourceLog" parameterType="java.lang.String">
        SELECT t.*
        FROM task_item_resource_log t
        WHERE t.task_item_resource_id = #{id}
    </select>

    <select id="taskLogList" resultMap="TaskItemLogResultMap" parameterType="java.lang.String">
        SELECT t.*
        FROM task_item_resource t
        WHERE t.task_id = #{id}
        order by t.id desc
    </select>

    <resultMap id="TaskReportMap" type="com.hummerrisk.dto.TaskReportDTO" extends="com.hummerrisk.base.mapper.TaskMapper.BaseResultMap">
        <collection property="historyCloudTaskDTOList" ofType="com.hummerrisk.dto.HistoryCloudTaskDTO" javaType="list" select="getHistoryCloudTaskDTOList" column="id">
        </collection>
        <collection property="historyCloudResourceReportDTOList" ofType="com.hummerrisk.dto.HistoryResourceReportDTO" javaType="list" select="getHistoryCloudResourceReportDTOList" column="id">
        </collection>
        <collection property="historyVulnTaskDTOList" ofType="com.hummerrisk.dto.HistoryVulnTaskDTO" javaType="list" select="getHistoryVulnTaskDTOList" column="id">
        </collection>
        <collection property="historyVulnResourceReportDTOList" ofType="com.hummerrisk.base.domain.HistoryResourceReportDTO" javaType="list" select="getHistoryVulnResourceReportDTOList" column="id">
        </collection>
        <collection property="historyServerTaskList" ofType="com.hummerrisk.base.domain.HistoryServerTask" javaType="list" select="getHistoryServerTaskList" column="id">
        </collection>
        <collection property="historyImageReportDTOList" ofType="com.hummerrisk.dto.HistoryImageReportDTO" javaType="list" select="getHistoryImageReportDTOList" column="id">
        </collection>
        <collection property="historyPackageReportDTOList" ofType="com.hummerrisk.dto.HistoryPackageReportDTO" javaType="list" select="getHistoryPackageReportDTOList" column="id">
        </collection>
    </resultMap>

    <select id="report" resultMap="TaskReportMap" parameterType="java.lang.String">
        SELECT t.*
        FROM task t
        WHERE t.id = #{id}
    </select>

    <select id="getHistoryCloudTaskDTOList" resultType="com.hummerrisk.dto.HistoryCloudTaskDTO" parameterType="java.lang.String">
        SELECT t1.*, t3.name as accountName
        FROM history_cloud_task t1
        JOIN task_item_resource t2 on t2.resource_id = t1.id
        JOIN cloud_account t3 on t3.id = t1.account_id
        WHERE t2.task_id = #{id}
    </select>

    <resultMap id="HistoryCloudResourceReportDTOMap" type="com.hummerrisk.dto.HistoryResourceReportDTO" extends="com.hummerrisk.base.mapper.ResourceMapper.BaseResultMap">
        <collection property="resourceItemList" ofType="com.hummerrisk.base.domain.ResourceItem" javaType="list" select="getResourceItemList" column="id">
        </collection>
    </resultMap>

    <select id="getHistoryCloudResourceReportDTOList" resultMap="HistoryCloudResourceReportDTOMap" parameterType="java.lang.String">
        SELECT t.*
        FROM resource t
        JOIN cloud_task_item_resource t1 on t.id = t1.resource_id
        JOIN history_cloud_task t2 on t1.task_id = t2.id
        JOIN task_item_resource t3 on t3.resource_id = t2.id
        WHERE t3.task_id = #{id}
    </select>

    <select id="getResourceItemList" resultType="com.hummerrisk.base.domain.ResourceItem" parameterType="java.lang.String">
        SELECT t.*
        FROM resource_item t
        WHERE t.resource_id = #{id}
    </select>

    <select id="getHistoryVulnTaskDTOList" resultType="com.hummerrisk.dto.HistoryVulnTaskDTO" parameterType="java.lang.String">
        SELECT t1.*, t3.name as accountName
        FROM history_vuln_task t1
        JOIN task_item_resource t2 on t2.resource_id = t1.id
        JOIN cloud_account t3 on t3.id = t1.account_id
        WHERE t2.task_id = #{id}
    </select>

    <resultMap id="HistoryVulnResourceReportDTOMap" type="com.hummerrisk.dto.HistoryResourceReportDTO" extends="com.hummerrisk.base.mapper.ResourceMapper.BaseResultMap">
        <collection property="resourceItemList" ofType="com.hummerrisk.base.domain.ResourceItem" javaType="list" select="getResourceItemList" column="id">
        </collection>
    </resultMap>

    <select id="getHistoryVulnResourceReportDTOList" resultMap="HistoryCloudResourceReportDTOMap" parameterType="java.lang.String">
        SELECT t.*
        FROM resource t
        JOIN cloud_task_item_resource t1 on t.id = t1.resource_id
        JOIN history_vuln_task t2 on t1.task_id = t2.id
        JOIN task_item_resource t3 on t3.resource_id = t2.id
        WHERE t3.task_id = #{id}
    </select>

    <select id="getHistoryServerTaskList" resultType="com.hummerrisk.base.domain.HistoryServerTask" parameterType="java.lang.String">
        SELECT t.*
        FROM history_server_task t
        JOIN task_item_resource t1 on t1.resource_id = t.id
        WHERE t1.task_id = #{id}
    </select>

    <resultMap id="HistoryImageReportDTOMap" type="com.hummerrisk.dto.HistoryImageReportDTO" extends="com.hummerrisk.base.mapper.HistoryImageTaskMapper.BaseResultMap">
        <collection property="imageGrypeTableList" ofType="com.hummerrisk.base.domain.ImageGrypeTable" javaType="list" select="getImageGrypeTableList" column="id">
        </collection>
        <collection property="imageGrypeJsonList" ofType="com.hummerrisk.base.domain.ImageGrypeJson" javaType="list" select="getImageGrypeJsonList" column="id">
        </collection>
        <collection property="imageSyftTableList" ofType="com.hummerrisk.base.domain.ImageSyftTable" javaType="list" select="getImageSyftTableList" column="id">
        </collection>
        <collection property="imageSyftJsonList" ofType="com.hummerrisk.base.domain.ImageSyftJson" javaType="list" select="getImageSyftJsonList" column="id">
        </collection>
    </resultMap>

    <select id="getHistoryImageReportDTOList" resultMap="HistoryImageReportDTOMap" parameterType="java.lang.String">
        SELECT t.*
        FROM history_image_task t
        JOIN task_item_resource t1 on t1.resource_id = t.id
        WHERE t1.task_id = #{id}
    </select>

    <select id="getImageGrypeTableList" resultType="com.hummerrisk.base.domain.ImageGrypeTable" parameterType="java.lang.String">
        SELECT t.*
        FROM image_grype_table t
        JOIN history_image_task t1 on t1.id = t.result_id
        WHERE t1.id = #{id}
    </select>

    <select id="getImageGrypeJsonList" resultType="com.hummerrisk.base.domain.ImageGrypeJsonWithBLOBs" parameterType="java.lang.String">
        SELECT t.*
        FROM image_grype_json t
        JOIN history_image_task t1 on t1.id = t.result_id
        WHERE t1.id = #{id}
    </select>

    <select id="getImageSyftTableList" resultType="com.hummerrisk.base.domain.ImageSyftTable" parameterType="java.lang.String">
        SELECT t.*
        FROM image_syft_table t
        JOIN history_image_task t1 on t1.id = t.result_id
        WHERE t1.id = #{id}
    </select>

    <select id="getImageSyftJsonList" resultType="com.hummerrisk.base.domain.ImageSyftJsonWithBLOBs" parameterType="java.lang.String">
        SELECT t.*
        FROM image_syft_json t
        JOIN history_image_task t1 on t1.id = t.result_id
        WHERE t1.id = #{id}
    </select>

    <resultMap id="HistoryPackageReportDTOMap" type="com.hummerrisk.dto.HistoryPackageReportDTO" extends="com.hummerrisk.base.mapper.HistoryPackageTaskMapper.BaseResultMap">
        <collection property="packageDependencyJsonList" ofType="com.hummerrisk.base.domain.PackageDependencyJsonWithBLOBs" javaType="list" select="getPackageDependencyJsonList" column="id">
        </collection>
    </resultMap>

    <select id="getHistoryPackageReportDTOList" resultMap="HistoryPackageReportDTOMap" parameterType="java.lang.String">
        SELECT t.*
        FROM history_package_task t
        JOIN task_item_resource t1 on t1.resource_id = t.id
        WHERE t1.task_id = #{id}
    </select>

    <select id="getPackageDependencyJsonList" resultType="com.hummerrisk.base.domain.PackageDependencyJsonWithBLOBs" parameterType="java.lang.String">
        SELECT t.*
        FROM package_dependency_json t
        JOIN history_package_task t1 on t1.id = t.result_id
        WHERE t1.id = #{id}
    </select>

</mapper>
